{"version":3,"sources":["components/Header.tsx","components/AddInput.tsx","components/AddButton.tsx","components/Form.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/NoTasksMessage.tsx","App.tsx","index.tsx"],"names":["Header","className","href","AddInput","placeholder","name","AddButton","type","Form","onSubmit","TodoItem","todo","index","toggleTodo","removeTodo","checked","completed","onChange","id","title","onClick","TodoList","todos","map","NoTasksMessage","App","useState","setTodos","e","preventDefault","inputValue","currentTarget","add","value","trim","newTodos","Date","now","addTodo","length","filter","ReactDOM","render","document","getElementById"],"mappings":"kNAUeA,EARA,kBACb,oBAAIC,UAAU,SAAd,SACE,mBAAGA,UAAU,cAAcC,KAAK,aAAhC,oFCEWC,EAJE,kBACf,uBAAOF,UAAU,YAAYG,YAAY,gGAAqBC,KAAK,SCKtDC,EANG,kBAChB,yBAAQL,UAAU,UAAUM,KAAK,SAAjC,UACE,sBAAMN,UAAU,oBAAhB,kBADF,wDCYaO,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,uBAAMR,UAAU,OAAOQ,SAAUA,EAAjC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCqBWC,EAtBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,WAA5B,OACf,gCACE,qBAAIb,UAAU,YAAd,UACE,sBAAKA,UAAU,aAAf,UACE,uBACEA,UAAU,eACVM,KAAK,WACLQ,QAASJ,EAAKK,UACdC,SAAU,kBAAMJ,EAAWF,EAAKO,OAElC,sBAAMjB,UAAU,iBAChB,sBAAMA,UAAU,cAAhB,SAA+BW,EAAQ,IACvC,sBAAMX,UAAU,aAAhB,SAA8BU,EAAKQ,WAGrC,wBAAQlB,UAAU,SAASmB,QAAS,kBAAMN,EAAWH,EAAKO,KAA1D,wBCDSG,EAdE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOT,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,WAAtB,OACf,oBAAIb,UAAU,YAAd,SACGqB,EAAMC,KAAI,SAACZ,EAAaC,GAAd,OACT,cAAC,EAAD,CACED,KAAMA,EAENC,MAAOA,EACPC,WAAYA,EACZC,WAAYA,GAHPH,EAAKO,UCNHM,EAPQ,kBACrB,sBAAKvB,UAAU,WAAf,UACE,mBAAGA,UAAU,eAAb,2GACA,mBAAGA,UAAU,eAAb,iNCqDWwB,G,YAjDH,WACV,MAA0BC,mBAAkB,IAA5C,mBAAOJ,EAAP,KAAcK,EAAd,KA+BA,OACE,sBAAK1B,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMQ,SAXW,SAACmB,GACpBA,EAAEC,iBAEF,IAAMC,EAAaF,EAAEG,cAAcC,IAAIC,MAAMC,OACzCJ,GAzBU,SAACX,GACf,IAAMgB,EAAQ,sBACTb,GACA,CAAC,CAAEH,QAAOD,GAAIkB,KAAKC,MAAOrB,WAAW,KAE1CW,EAASQ,GAoBOG,CAAQR,GACxBF,EAAEG,cAAcC,IAAIC,MAAQ,MAOxBX,EAAMiB,OAGN,cAAC,EAAD,CACEjB,MAAOA,EACPT,WA9BW,SAACK,GAClBS,EACEL,EAAMC,KAAI,SAACZ,GAET,OADIA,EAAKO,KAAOA,IAAIP,EAAKK,WAAaL,EAAKK,WACpCL,OA2BLG,WAtBW,SAACI,GAClBS,EAASL,EAAMkB,QAAO,SAAC7B,GAAD,OAAUA,EAAKO,KAAOA,SAgBxC,cAAC,EAAD,SC1CRuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e519fe96.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <h1 className=\"header\">\r\n    <a className=\"header-link\" href=\"index.html\">\r\n      Список задач\r\n    </a>\r\n  </h1>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst AddInput = () => (\r\n  <input className=\"add-input\" placeholder=\"Что нужно сделать?\" name=\"add\" />\r\n);\r\n\r\nexport default AddInput;\r\n","import React from \"react\";\r\n\r\nconst AddButton = () => (\r\n  <button className=\"add-btn\" type=\"submit\">\r\n    <span className=\"add-btn-plus-sign\">&times;</span> Добавить\r\n  </button>\r\n);\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport AddInput from \"./AddInput\";\r\nimport AddButton from \"./AddButton\";\r\n\r\ntype FormProps = {\r\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nconst Form = ({ onSubmit }: FormProps) => (\r\n  <form className=\"form\" onSubmit={onSubmit}>\r\n    <AddInput />\r\n    <AddButton />\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { ITodo } from \"../Interfaces\";\r\n\r\ntype TodoItemProps = {\r\n  todo: ITodo;\r\n  index: number;\r\n  toggleTodo: (id: number) => void;\r\n  removeTodo: (id: number) => void;\r\n};\r\n\r\nconst TodoItem = ({ todo, index, toggleTodo, removeTodo }: TodoItemProps) => (\r\n  <label>\r\n    <li className=\"todo-item\">\r\n      <div className=\"input-wrap\">\r\n        <input\r\n          className=\"check-custom\"\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          onChange={() => toggleTodo(todo.id)}\r\n        />\r\n        <span className=\"check-toggle\" />\r\n        <span className=\"task-number\">{index + 1}</span>\r\n        <span className=\"task-title\">{todo.title}</span>\r\n      </div>\r\n\r\n      <button className=\"rm-btn\" onClick={() => removeTodo(todo.id)}>\r\n        &times;\r\n      </button>\r\n    </li>\r\n  </label>\r\n);\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { ITodo } from \"../Interfaces\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  toggleTodo: (id: number) => void;\r\n  removeTodo: (id: number) => void;\r\n};\r\n\r\nconst TodoList = ({ todos, toggleTodo, removeTodo }: TodoListProps) => (\r\n  <ul className=\"todo-list\">\r\n    {todos.map((todo: ITodo, index: number) => (\r\n      <TodoItem\r\n        todo={todo}\r\n        key={todo.id}\r\n        index={index}\r\n        toggleTodo={toggleTodo}\r\n        removeTodo={removeTodo}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst NoTasksMessage = () => (\r\n  <div className=\"no-tasks\">\r\n    <p className=\"no-tasks-msg\">Список задач пуст.</p>\r\n    <p className=\"no-tasks-msg\">Добавьте задачу чтобы начать работу.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoTasksMessage;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Form from \"./components/Form\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport NoTasksMessage from \"./components/NoTasksMessage\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/media.css\";\r\nimport { ITodo } from \"./Interfaces\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n  const addTodo = (title: string): void => {\r\n    const newTodos = [\r\n      ...todos,\r\n      ...[{ title, id: Date.now(), completed: false }]\r\n    ];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const toggleTodo = (id: number): void => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) todo.completed = !todo.completed;\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id: number): void => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    const inputValue = e.currentTarget.add.value.trim();\r\n    if (inputValue) addTodo(inputValue);\r\n    e.currentTarget.add.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Form onSubmit={handleSubmit} />\r\n      {!todos.length ? (\r\n        <NoTasksMessage />\r\n      ) : (\r\n        <TodoList\r\n          todos={todos}\r\n          toggleTodo={toggleTodo}\r\n          removeTodo={removeTodo}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}